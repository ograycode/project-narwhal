{
  "author": {
    "name": "SendGrid",
    "email": "info@sendgrid.com",
    "url": "sendgrid.com"
  },
  "contributors": [
    {
      "name": "Kyle Partridge",
      "email": "kyle.partridge@sendgrid.com"
    },
    {
      "name": "David Tomberlin",
      "email": "david.tomberlin@sendgrid.com"
    }
  ],
  "name": "sendgrid-nodejs",
  "description": "A NodeJS implementation of the SendGrid Api.",
  "version": "0.1.0-2",
  "homepage": "sendgrid.com",
  "repository": {
    "type": "git",
    "url": "git://github.com/sendgrid/sendgrid-nodejs.git"
  },
  "engines": {
    "node": "~0.6.0"
  },
  "dependencies": {
    "underscore": ">=1.2.4",
    "nodemailer": "*",
    "mime": "*"
  },
  "devDependencies": {
    "mocha": ">= 0.9.0",
    "chai": ">= 0.1.6"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "# sendgrid-nodejs #\nThis nodejs module allows you to quickly and easily send emails through\nSendGrid using nodejs.\n\n## License ##\nLicensed under the MIT License.\n\n## Install ##\n```\nnpm install sendgrid-nodejs\n```\n## Usage ##\n### It can be this easy ###\n```javascript\nvar SendGrid = require('sendgrid-nodejs').SendGrid;\nvar sendgrid = new SendGrid(user, key);\nsendgrid.send({\n  to: 'example@example.com',\n  from: 'other@example.com',\n  subject: 'Hello World',\n  text: 'My first email through SendGrid'\n});\n```\nAnd you're done!\n\n### Digging in ###\nThere are two objects that you really need to know to get started:\n+   SendGrid\n+   Email\n\n#### Email ####\nEmail is the object that will help you easily perpare your message to be\nsent.\nTo get started create an Email object\n\n```javascript\nvar email = new Email(optionalParams);\n```\nYou can pass in as much or as litle to optionalParams as you want, as\nthe email object has methods for manipulating all of the data.\n\n**params structure**\n\n```javascript\nvar default_mail_params = {\n  to: [],\n  from: '',\n  smtpapi: new SmtpapiHeaders(),\n  subject: '',\n  text: '',\n  html: '',\n  bcc: [],\n  replyto: '',\n  date: new Date(),\n  files: {},\n  file_data: {},\n  headers: {}\n};\n```\nSample for using it:\n\n```javascript\nvar email = new Email({\n  to: 'sample@sample.com',\n  from: 'sample@sample.com',\n  subject: 'Hey',\n  text: 'Did you see that ludicrous display last night?'\n});\n```\n\n##### Setting data #####\nIn general setting a value will override it while adding that value will\nadd it to the existing values but will override existing keys with the\nnew value.\n\n```javascript\nvar email = new Email({\n  to: 'sample@sample.com',\n  from: 'sample@sample.com',\n  subject: 'Listen',\n  text: 'Haved you tried turning it off and on again'\n});\n\n// Add other to addresses\nemail.addTo('moo@cow.com');\n// addTo also takes an array\nemail.addTo(['solid@snake.com', 'liquid@snake.com']);\n\n// setHeaders will override any header values already set\nemail.setHeaders({customHeader: 'some-value'});\n// addHeaders will add to existing headers, overriding existing keys\nemail.addHeaders({customHeaderTwo: 'Another value'});\n\n// Adding substitution values\nemail.addSubVal('key', value);\n\n// Setting unique args will override any values already set\nemail.setUniqueArgs({cow: 'chicken'});\n// Adding unique args will add to existing values, overriding existing\nkeys\nemail.addUniqueArgs({cat: 'dog'});\n\n// Setting/Adding a category\nemail.setCategory('tactics');\nemail.setCategory('advanced');\n\n// Setting/Adding a Section\nemail.setSection({'-section-': 'text name'});\nemail.addSection({'-other-': 'person name'});\n\n// Setting a Filter, takes an object literal\nemail.setFilterSetting({\n  'footer': {\n    'setting': {\n      'enable': 1,\n      'text/plain': 'You can haz footers!'\n    }\n  }\n});\n// Adding a filter via addFilterSetting\nemail.addFilterSetting('footer', 'enable', 1);\nemail.addFilterSetting('footer', 'text/hmtl', '<strong>boo</strong>');\n\n\n// Adding a file\nemail.addFile('secret.txt', '/path/to/file');\n```\n\nMore examples can be find in the test\n\n## Tests ##\nIf you're interested in seeing some sample code or just want to run the\ntest then here's what you need to know.\nTest written in the test/lib folder can be ran as in and should all\npass.\nTest written in test/intergration need the values in test/test.setup to\nbe set in order to run and will require a SendGrid account, as these\ntest will send actual emails.\n\nRunning \n\n```\nmake test\n```\n\nwill run all tests, otherwise you can run individual tests by running\n\n```\nmocha /path/to/test.test.js\n```\n\nFor information on how to use Sendgrid see:\n[SendGrid API Docs](http://docs.sendgrid.com/documentation/api/)",
  "_id": "sendgrid-nodejs@0.1.0-2",
  "_from": "sendgrid-nodejs"
}
